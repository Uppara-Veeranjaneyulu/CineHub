{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uuppa\\\\OneDrive\\\\Documents\\\\CIneHub\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MovieList from '../components/MovieList';\nimport { API_KEY, BASE_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [watchlist, setWatchlist] = useState(JSON.parse(localStorage.getItem('watchlist')) || []);\n  useEffect(() => {\n    fetchTrending();\n    fetchGenres();\n  }, []);\n  const fetchTrending = async () => {\n    const {\n      data\n    } = await axios.get(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n    setMovies(data.results);\n  };\n  const fetchGenres = async () => {\n    const {\n      data\n    } = await axios.get(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}`);\n    setGenres(data.genres);\n  };\n  const handleSearch = async () => {\n    if (!search) return;\n    const {\n      data\n    } = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${search}`);\n    setMovies(data.results);\n  };\n  const filterByGenre = async genreId => {\n    setSelectedGenre(genreId);\n    const {\n      data\n    } = await axios.get(`${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=${genreId}`);\n    setMovies(data.results);\n  };\n  const addToWatchlist = movie => {\n    const updatedList = [...watchlist, movie];\n    setWatchlist(updatedList);\n    localStorage.setItem('watchlist', JSON.stringify(updatedList));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col sm:flex-row gap-2 p-4 items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search movies...\",\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        className: \"p-2 rounded text-black flex-grow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        className: \"bg-orange-500 px-4 py-2 rounded hover:bg-orange-400\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 p-4 overflow-x-auto\",\n      children: genres.map(g => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => filterByGenre(g.id),\n        className: `px-3 py-1 rounded ${selectedGenre === g.id ? 'bg-orange-500' : 'bg-gray-700'} hover:bg-orange-400`,\n        children: g.name\n      }, g.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: movies,\n      addToWatchlist: addToWatchlist,\n      isWatchlist: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Evo982O4wgFr1/f9sZZrwQrL17s=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","MovieList","API_KEY","BASE_URL","jsxDEV","_jsxDEV","Home","_s","movies","setMovies","search","setSearch","genres","setGenres","selectedGenre","setSelectedGenre","watchlist","setWatchlist","JSON","parse","localStorage","getItem","fetchTrending","fetchGenres","data","get","results","handleSearch","filterByGenre","genreId","addToWatchlist","movie","updatedList","setItem","stringify","children","className","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","g","id","name","isWatchlist","_c","$RefreshReg$"],"sources":["C:/Users/uuppa/OneDrive/Documents/CIneHub/src/pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport MovieList from '../components/MovieList';\r\nimport { API_KEY, BASE_URL } from '../config';\r\n\r\nconst Home = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [genres, setGenres] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState('');\r\n  const [watchlist, setWatchlist] = useState(JSON.parse(localStorage.getItem('watchlist')) || []);\r\n\r\n  useEffect(() => {\r\n    fetchTrending();\r\n    fetchGenres();\r\n  }, []);\r\n\r\n  const fetchTrending = async () => {\r\n    const { data } = await axios.get(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\r\n    setMovies(data.results);\r\n  };\r\n\r\n  const fetchGenres = async () => {\r\n    const { data } = await axios.get(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}`);\r\n    setGenres(data.genres);\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!search) return;\r\n    const { data } = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${search}`);\r\n    setMovies(data.results);\r\n  };\r\n\r\n  const filterByGenre = async (genreId) => {\r\n    setSelectedGenre(genreId);\r\n    const { data } = await axios.get(`${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=${genreId}`);\r\n    setMovies(data.results);\r\n  };\r\n\r\n  const addToWatchlist = (movie) => {\r\n    const updatedList = [...watchlist, movie];\r\n    setWatchlist(updatedList);\r\n    localStorage.setItem('watchlist', JSON.stringify(updatedList));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex flex-col sm:flex-row gap-2 p-4 items-center\">\r\n        <input type=\"text\" placeholder=\"Search movies...\" value={search} onChange={e => setSearch(e.target.value)}\r\n          className=\"p-2 rounded text-black flex-grow\"/>\r\n        <button onClick={handleSearch} className=\"bg-orange-500 px-4 py-2 rounded hover:bg-orange-400\">Search</button>\r\n      </div>\r\n      <div className=\"flex gap-2 p-4 overflow-x-auto\">\r\n        {genres.map(g => (\r\n          <button \r\n            key={g.id} \r\n            onClick={() => filterByGenre(g.id)}\r\n            className={`px-3 py-1 rounded ${selectedGenre===g.id?'bg-orange-500':'bg-gray-700'} hover:bg-orange-400`}\r\n          >{g.name}</button>\r\n        ))}\r\n      </div>\r\n      <MovieList movies={movies} addToWatchlist={addToWatchlist} isWatchlist={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}